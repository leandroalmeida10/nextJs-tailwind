/* eslint-disable react-hooks/rules-of-hooks */
import React from 'react'
import CustomInput from '../../components/Input'
import CardGrid from './components/CardGrid'
import Loading from '../../components/Loading'
import useGridConsumer from './hooks/useGridConsumer'

export default function gridConsumer() {
  const { data, isLoading, router, setDateEnd, setDateInitial } =
    useGridConsumer()
  return (
    <section className="py-8">
      <Loading isVisible={isLoading} />
      <div className="container px-4 mx-auto">
        <div className="inline-block mb-6">
          <label className="block text-sm font-medium mb-2 ml-4">De:</label>
          <CustomInput
            mask="99/99/9999"
            placeholder="dd/mm/aaaa"
            onChange={(v) => setDateInitial(v.target.value)}
          />
        </div>

        <div className="inline-block mb-6 ml-3">
          <label className="block text-sm font-medium mb-2 ml-4">Até:</label>
          <CustomInput
            mask="99/99/9999"
            placeholder="dd/mm/aaaa"
            onChange={(v) => setDateEnd(v.target.value)}
          />
        </div>

        <div className="flex flex-wrap ">
          <CardGrid
            onClick={() => router.push('/historyConsummer/VEHICLE')}
            label="Veículos"
            value={data?.content.quantityVehicle ?? 0}
            IconCard={
              <>
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.9998 0.666656C12.2489 0.666656 10.5151 1.01153 8.89738 1.6816C7.2797 2.35166 5.80985 3.33379 4.57173 4.5719C2.07125 7.07238 0.666488 10.4638 0.666488 14C0.654832 17.0788 1.72088 20.0647 3.67982 22.44L1.01315 25.1067C0.828145 25.2942 0.702816 25.5323 0.652984 25.7909C0.603152 26.0496 0.631049 26.3172 0.733155 26.56C0.843899 26.7999 1.02343 27.0015 1.24895 27.1392C1.47447 27.2769 1.73582 27.3444 1.99982 27.3333H13.9998C17.536 27.3333 20.9274 25.9286 23.4279 23.4281C25.9284 20.9276 27.3332 17.5362 27.3332 14C27.3332 10.4638 25.9284 7.07238 23.4279 4.5719C20.9274 2.07141 17.536 0.666656 13.9998 0.666656V0.666656ZM13.9998 24.6667H5.21316L6.45316 23.4267C6.70149 23.1768 6.84088 22.8389 6.84088 22.4867C6.84088 22.1344 6.70149 21.7965 6.45316 21.5467C4.70727 19.8027 3.62005 17.5074 3.37674 15.0517C3.13343 12.5961 3.74908 10.132 5.11879 8.07935C6.4885 6.02671 8.52754 4.51247 10.8885 3.79462C13.2495 3.07677 15.7863 3.19973 18.0668 4.14254C20.3473 5.08535 22.2303 6.78969 23.3951 8.96518C24.5599 11.1407 24.9343 13.6527 24.4547 16.0733C23.975 18.494 22.6709 20.6734 20.7645 22.2403C18.8582 23.8072 16.4675 24.6647 13.9998 24.6667V24.6667ZM20.6665 12.6667H7.33316C6.97953 12.6667 6.6404 12.8071 6.39035 13.0572C6.1403 13.3072 5.99982 13.6464 5.99982 14C5.99982 14.3536 6.1403 14.6928 6.39035 14.9428C6.6404 15.1928 6.97953 15.3333 7.33316 15.3333H20.6665C21.0201 15.3333 21.3593 15.1928 21.6093 14.9428C21.8593 14.6928 21.9998 14.3536 21.9998 14C21.9998 13.6464 21.8593 13.3072 21.6093 13.0572C21.3593 12.8071 21.0201 12.6667 20.6665 12.6667ZM17.9998 18H9.99982C9.6462 18 9.30706 18.1405 9.05701 18.3905C8.80697 18.6406 8.66649 18.9797 8.66649 19.3333C8.66649 19.6869 8.80697 20.0261 9.05701 20.2761C9.30706 20.5262 9.6462 20.6667 9.99982 20.6667H17.9998C18.3534 20.6667 18.6926 20.5262 18.9426 20.2761C19.1927 20.0261 19.3332 19.6869 19.3332 19.3333C19.3332 18.9797 19.1927 18.6406 18.9426 18.3905C18.6926 18.1405 18.3534 18 17.9998 18ZM9.99982 9.99999H17.9998C18.3534 9.99999 18.6926 9.85951 18.9426 9.60947C19.1927 9.35942 19.3332 9.02028 19.3332 8.66666C19.3332 8.31303 19.1927 7.9739 18.9426 7.72385C18.6926 7.4738 18.3534 7.33332 17.9998 7.33332H9.99982C9.6462 7.33332 9.30706 7.4738 9.05701 7.72385C8.80697 7.9739 8.66649 8.31303 8.66649 8.66666C8.66649 9.02028 8.80697 9.35942 9.05701 9.60947C9.30706 9.85951 9.6462 9.99999 9.99982 9.99999V9.99999Z"
                    fill="#8128DE"
                  ></path>
                </svg>
              </>
            }
          />
          <CardGrid
            onClick={() => router.push('/historyConsummer/ADRESS')}
            label="Endereços"
            value={data?.content.quantityAdress ?? 0}
            IconCard={
              <>
                <svg
                  width="28"
                  height="26"
                  viewBox="0 0 28 26"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M23.3332 5.66668H19.3332V4.33334C19.3332 3.27248 18.9117 2.25506 18.1616 1.50492C17.4115 0.754771 16.394 0.333344 15.3332 0.333344H12.6665C11.6056 0.333344 10.5882 0.754771 9.83808 1.50492C9.08793 2.25506 8.6665 3.27248 8.6665 4.33334V5.66668H4.6665C3.60564 5.66668 2.58822 6.0881 1.83808 6.83825C1.08793 7.58839 0.666504 8.60581 0.666504 9.66668V21.6667C0.666504 22.7275 1.08793 23.745 1.83808 24.4951C2.58822 25.2452 3.60564 25.6667 4.6665 25.6667H23.3332C24.394 25.6667 25.4115 25.2452 26.1616 24.4951C26.9117 23.745 27.3332 22.7275 27.3332 21.6667V9.66668C27.3332 8.60581 26.9117 7.58839 26.1616 6.83825C25.4115 6.0881 24.394 5.66668 23.3332 5.66668ZM11.3332 4.33334C11.3332 3.97972 11.4736 3.64058 11.7237 3.39053C11.9737 3.14049 12.3129 3.00001 12.6665 3.00001H15.3332C15.6868 3.00001 16.0259 3.14049 16.276 3.39053C16.526 3.64058 16.6665 3.97972 16.6665 4.33334V5.66668H11.3332V4.33334ZM24.6665 21.6667C24.6665 22.0203 24.526 22.3594 24.276 22.6095C24.0259 22.8595 23.6868 23 23.3332 23H4.6665C4.31288 23 3.97374 22.8595 3.7237 22.6095C3.47365 22.3594 3.33317 22.0203 3.33317 21.6667V14.3333C4.63376 14.8492 5.97075 15.2681 7.33317 15.5867V16.3733C7.33317 16.727 7.47365 17.0661 7.7237 17.3161C7.97374 17.5662 8.31288 17.7067 8.6665 17.7067C9.02013 17.7067 9.35927 17.5662 9.60931 17.3161C9.85936 17.0661 9.99984 16.727 9.99984 16.3733V16.0933C11.3256 16.2738 12.6618 16.3674 13.9998 16.3733C15.3379 16.3674 16.674 16.2738 17.9998 16.0933V16.3733C17.9998 16.727 18.1403 17.0661 18.3904 17.3161C18.6404 17.5662 18.9796 17.7067 19.3332 17.7067C19.6868 17.7067 20.0259 17.5662 20.276 17.3161C20.526 17.0661 20.6665 16.727 20.6665 16.3733V15.5867C22.0289 15.2681 23.3659 14.8492 24.6665 14.3333V21.6667ZM24.6665 11.4133C23.3697 11.9607 22.0323 12.4065 20.6665 12.7467V12.3333C20.6665 11.9797 20.526 11.6406 20.276 11.3905C20.0259 11.1405 19.6868 11 19.3332 11C18.9796 11 18.6404 11.1405 18.3904 11.3905C18.1403 11.6406 17.9998 11.9797 17.9998 12.3333V13.32C15.3482 13.7201 12.6515 13.7201 9.99984 13.32V12.3333C9.99984 11.9797 9.85936 11.6406 9.60931 11.3905C9.35927 11.1405 9.02013 11 8.6665 11C8.31288 11 7.97374 11.1405 7.7237 11.3905C7.47365 11.6406 7.33317 11.9797 7.33317 12.3333V12.7733C5.96733 12.4331 4.62998 11.9873 3.33317 11.44V9.66668C3.33317 9.31305 3.47365 8.97392 3.7237 8.72387C3.97374 8.47382 4.31288 8.33334 4.6665 8.33334H23.3332C23.6868 8.33334 24.0259 8.47382 24.276 8.72387C24.526 8.97392 24.6665 9.31305 24.6665 9.66668V11.4133Z"
                    fill="#17BB84"
                  ></path>
                </svg>
              </>
            }
          />
          <CardGrid
            onClick={() => router.push('/historyConsummer/PF')}
            label="Pessoa física"
            value={data?.content.quantityPF ?? 0}
            IconCard={
              <>
                <svg
                  width="22"
                  height="28"
                  viewBox="0 0 22 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M21.6663 9.91999C21.6524 9.7975 21.6256 9.67683 21.5863 9.55999V9.43999C21.5222 9.3029 21.4367 9.17688 21.333 9.06666V9.06666L13.333 1.06666C13.2228 0.962945 13.0968 0.877431 12.9597 0.813323H12.8397C12.7042 0.735645 12.5546 0.685782 12.3997 0.666656H4.33301C3.27214 0.666656 2.25473 1.08808 1.50458 1.83823C0.754435 2.58838 0.333008 3.60579 0.333008 4.66666V23.3333C0.333008 24.3942 0.754435 25.4116 1.50458 26.1618C2.25473 26.9119 3.27214 27.3333 4.33301 27.3333H17.6663C18.7272 27.3333 19.7446 26.9119 20.4948 26.1618C21.2449 25.4116 21.6663 24.3942 21.6663 23.3333V9.99999C21.6663 9.99999 21.6663 9.99999 21.6663 9.91999ZM13.6663 5.21332L17.1197 8.66666H14.9997C14.6461 8.66666 14.3069 8.52618 14.0569 8.27613C13.8068 8.02608 13.6663 7.68695 13.6663 7.33332V5.21332ZM18.9997 23.3333C18.9997 23.6869 18.8592 24.0261 18.6091 24.2761C18.3591 24.5262 18.02 24.6667 17.6663 24.6667H4.33301C3.97939 24.6667 3.64025 24.5262 3.3902 24.2761C3.14015 24.0261 2.99967 23.6869 2.99967 23.3333V4.66666C2.99967 4.31303 3.14015 3.9739 3.3902 3.72385C3.64025 3.4738 3.97939 3.33332 4.33301 3.33332H10.9997V7.33332C10.9997 8.39419 11.4211 9.41161 12.1712 10.1618C12.9214 10.9119 13.9388 11.3333 14.9997 11.3333H18.9997V23.3333Z"
                    fill="#F67A28"
                  ></path>
                </svg>
              </>
            }
          />

          <CardGrid
            onClick={() => router.push('/historyConsummer/PJ')}
            label="Pessoa Jurídica"
            value={data?.content.quantityPj ?? 0}
            IconCard={
              <>
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17.746 14.3733C18.59 13.467 19.0654 12.2784 19.0794 11.04C19.0794 9.7033 18.5484 8.42136 17.6032 7.47617C16.658 6.53099 15.376 5.99999 14.0394 5.99999C12.7027 5.99999 11.4207 6.53099 10.4755 7.47617C9.53035 8.42136 8.99935 9.7033 8.99935 11.04C9.01326 12.2784 9.48871 13.467 10.3327 14.3733C9.15756 14.9585 8.14631 15.8266 7.3899 16.8995C6.6335 17.9724 6.15565 19.2166 5.99935 20.52C5.96045 20.8736 6.06362 21.2282 6.28616 21.5058C6.50871 21.7833 6.83239 21.9611 7.18602 22C7.53964 22.0389 7.89423 21.9357 8.17178 21.7132C8.44934 21.4906 8.62712 21.1669 8.66602 20.8133C8.82513 19.5215 9.45114 18.3325 10.4261 17.4702C11.4011 16.6079 12.6578 16.132 13.9594 16.132C15.2609 16.132 16.5176 16.6079 17.4926 17.4702C18.4676 18.3325 19.0936 19.5215 19.2527 20.8133C19.2898 21.1552 19.4575 21.4696 19.7209 21.6907C19.9842 21.9118 20.3229 22.0226 20.666 22H20.8127C21.1622 21.9598 21.4817 21.7831 21.7014 21.5083C21.9212 21.2336 22.0235 20.8831 21.986 20.5333C21.8413 19.2368 21.3785 17.996 20.6388 16.9214C19.8991 15.8467 18.9054 14.9715 17.746 14.3733V14.3733ZM13.9994 13.4133C13.5299 13.4133 13.0711 13.2741 12.6808 13.0133C12.2905 12.7526 11.9863 12.3819 11.8067 11.9482C11.627 11.5146 11.58 11.0374 11.6716 10.577C11.7632 10.1166 11.9892 9.69371 12.3212 9.36179C12.6531 9.02987 13.076 8.80384 13.5363 8.71226C13.9967 8.62069 14.4739 8.66768 14.9076 8.84732C15.3413 9.02695 15.7119 9.33115 15.9727 9.72144C16.2335 10.1117 16.3727 10.5706 16.3727 11.04C16.3727 11.6694 16.1226 12.2731 15.6776 12.7182C15.2325 13.1633 14.6288 13.4133 13.9994 13.4133V13.4133ZM23.3327 0.666656H4.66602C3.60515 0.666656 2.58773 1.08808 1.83759 1.83823C1.08744 2.58838 0.666016 3.60579 0.666016 4.66666V23.3333C0.666016 24.3942 1.08744 25.4116 1.83759 26.1618C2.58773 26.9119 3.60515 27.3333 4.66602 27.3333H23.3327C24.3936 27.3333 25.411 26.9119 26.1611 26.1618C26.9113 25.4116 27.3327 24.3942 27.3327 23.3333V4.66666C27.3327 3.60579 26.9113 2.58838 26.1611 1.83823C25.411 1.08808 24.3936 0.666656 23.3327 0.666656ZM24.666 23.3333C24.666 23.6869 24.5255 24.0261 24.2755 24.2761C24.0254 24.5262 23.6863 24.6667 23.3327 24.6667H4.66602C4.31239 24.6667 3.97326 24.5262 3.72321 24.2761C3.47316 24.0261 3.33268 23.6869 3.33268 23.3333V4.66666C3.33268 4.31303 3.47316 3.9739 3.72321 3.72385C3.97326 3.4738 4.31239 3.33332 4.66602 3.33332H23.3327C23.6863 3.33332 24.0254 3.4738 24.2755 3.72385C24.5255 3.9739 24.666 4.31303 24.666 4.66666V23.3333Z"
                    fill="#2D70F5"
                  ></path>
                </svg>
              </>
            }
          />
        </div>
      </div>
    </section>
  )
}
